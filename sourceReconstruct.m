%% Compute Source-reconstruction to get timeseries of all sources (without Brainstorm)
% by: S. Houtman's code

% Index all recordings in the folder with clean files
allRecordings = sh_rdir(pwd, {'.set', 'ECR'}, {'analysis', 'info'}, 1);

% Number of recordings
nRecordings = size(allRecordings, 2);

% Iterate along all files and copy the channel-file, head model and noise
% covariance matrix to the subjects folder
sFiles = [];
for recordingIdx = 1 : nRecordings
    % Extract filename parts
    [projectName, subjectName, subjectNumber, dateOfRecording, groupName, conditionName, fileType, extension] = sh_parseFilename(allRecordings{recordingIdx}, 5);
    
    disp([projectName, '.' subjectName]);
    
    EEG = pop_loadset(allRecordings{recordingIdx});
    
    % Process: Import MEG/EEG: Time
    sFiles = bst_process('CallProcess', 'process_import_data_time', sFiles, [], ...
        'subjectname',  [projectName, '.', subjectName], ...
        'condition',    '', ...
        'datafile',     {{allRecordings{recordingIdx}}, 'EEG-EEGLAB'}, ...
        'timewindow',   [EEG.xmin, EEG.xmax], ...
        'split',        0, ...
        'ignoreshort',  0, ...
        'channelalign', 0, ...
        'usectfcomp',   0, ...
        'usessp',       0, ...
        'freq',         [], ...
        'baseline',     []);

    % Process: Set channel file
    sFiles = bst_process('CallProcess', 'process_import_channel', sFiles, [], ...
        'usedefault',   56, ...  % ICBM152: BioSemi 64 10-10
        'channelalign', 1, ...
        'fixunits',     1, ...
        'vox2ras',      1);
    
    % Copy head model to folder
    copyfile('/Volumes/Nora_files/Scripts_July_2019/headmodel_surf_openmeeg.mat', ['/Users/norahagopian/Documents/Universiteit/Master_CN2/Master_thesis/Research_Project_I/Practical_files/Brainstorm/brainstorm_db/Protocol02/data/', [projectName, '.', subjectName],'/@default_study/headmodel_surf_openmeeg.mat']);
    
    % Reload Brainstorm protocol
    db_load_protocol(2)
    db_reload_studies(2)
    
    % Process: Compute covariance (noise or data)
    sFiles = bst_process('CallProcess', 'process_noisecov', sFiles, [], ...
        'baseline',       [0, 172.9882812], ...
        'datatimewindow', [0, 172.9882812], ...
        'sensortypes',    'EEG', ...
        'target',         1, ...  % Noise covariance     (covariance over baseline time window)
        'dcoffset',       2, ...  % Compute global average and remove it to from all the blocks
        'identity',       1, ...
        'copycond',       0, ...
        'copysubj',       0, ...
        'copymatch',      0, ...
        'replacefile',    1);  % Replace

    % Process: Compute sources [2018]
    sFiles = bst_process('CallProcess', 'process_inverse_2018', sFiles, [], ...
        'output',  1, ...  % Kernel only: shared
        'inverse', struct(...
             'Comment',        'MN: EEG', ...
             'InverseMethod',  'minnorm', ...
             'InverseMeasure', 'amplitude', ...
             'SourceOrient',   {{'fixed'}}, ...
             'Loose',          0.2, ...
             'UseDepth',       1, ...
             'WeightExp',      0.5, ...
             'WeightLimit',    10, ...
             'NoiseMethod',    'diag', ...
             'NoiseReg',       0.1, ...
             'SnrMethod',      'fixed', ...
             'SnrRms',         1e-06, ...
             'SnrFixed',       3, ...
             'ComputeKernel',  1, ...
             'DataTypes',      {{'EEG'}}));
end
